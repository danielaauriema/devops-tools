---
- name: Create remote data dir
  file:
    path: "{{ ldap_data_path }}"
    state: directory
    mode: 0775

- name: Create open LDAP container
  docker_container:
    name: "ldap"
    image: "bitnami/openldap:2.6.8"
    state: started
    restart: no
    restart_policy : always
    comparisons:
      published_ports: strict
    ports: "{{ ldap_ports }}"
    volumes:
      - "{{ ldap_data_path }}:/bitnami/openldap:rw"
    env:
      LDAP_ROOT: "{{ ldap_base_dn }}"
      LDAP_ADMIN_USERNAME: "{{ ldap_admin_username }}"
      LDAP_ADMIN_PASSWORD: "{{ ldap_admin_password }}"
      LDAP_ADMIN_DN: "{{ ldap_admin_dn }}"
      LDAP_BASE: "{{ ldap_base_dn }}"
      LDAP_USERS: " "
      LDAP_PASSWORDS: " "
      LDAP_PORT_NUMBER: "{{ ldap_internal_port }}"
    network_mode: bridge
    networks:
      - name: "{{ ldap_network }}"

- apt:
    pkg: python3-ldap

- name: Check if the ldap container is ready
  community.general.ldap_search:
    dn: "{{ ldap_base_dn }}"
    page_size: 1 
    schema: false
    server_uri: "{{ ldap_external_server_uri }}"
    bind_dn: "{{ ldap_admin_dn }}" 
    bind_pw: "{{ ldap_admin_password }}"  
  register: ldap_result
  until: not ldap_result.failed
  retries: 6
  delay: 5

- name: "Create LDAP bind user"
  ldap_entry:
    dn: "{{ ldap_bind_dn }}"
    objectClass:
      - simpleSecurityObject
      - organizationalRole
    attributes:
      userPassword: "{{ ldap_bind_password }}"
    server_uri: "{{ ldap_external_server_uri }}"
    bind_dn: "{{ ldap_admin_dn }}" 
    bind_pw: "{{ ldap_admin_password }}"  

- name: create ldap ou=groups
  ldap_entry:
    dn: "ou=groups,{{ ldap_base_dn }}"
    objectClass: 
      - organizationalUnit
    server_uri: "{{ ldap_external_server_uri }}"
    bind_dn: "{{ ldap_admin_dn }}" 
    bind_pw: "{{ ldap_admin_password }}"  

- name: create ldap ou=people
  ldap_entry:
    dn: "ou=people,{{ ldap_base_dn }}"
    objectClass: 
      - organizationalUnit
    server_uri: "{{ ldap_external_server_uri }}"
    bind_dn: "{{ ldap_admin_dn }}" 
    bind_pw: "{{ ldap_admin_password }}"  

- name: create ldap posixGroup people
  ldap_entry:
    dn: "cn=people,ou=groups,{{ ldap_base_dn }}"
    objectClass: 
      - posixGroup
    attributes:
      gidNumber: 1000
    server_uri: "{{ ldap_external_server_uri }}"
    bind_dn: "{{ ldap_admin_dn }}" 
    bind_pw: "{{ ldap_admin_password }}"  

- name: "Create LDAP user {{ ldap_user_id }}"
  ldap_entry:
    dn: "cn={{ ldap_user_id }},ou=people,{{ ldap_base_dn }}"
    objectClass:
      - posixAccount
      - simpleSecurityObject
      - organizationalRole
    attributes:
      uid: "{{ ldap_user_id }}"
      uidNumber: 1001
      gidNumber: 1001
      homeDirectory: "/home/{{ ldap_user_id }}"
      description: "{{ ldap_user_description }}"
      userPassword: "{{ ldap_user_password }}"
    server_uri: "{{ ldap_external_server_uri }}"
    bind_dn: "{{ ldap_admin_dn }}" 
    bind_pw: "{{ ldap_admin_password }}"  
